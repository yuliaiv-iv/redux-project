{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst initialAuthState = {\n  isAuth: false\n}; // using redux toolkit \n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\ncreateSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n\n    logout() {}\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     }\n//   }\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     }\n//   }\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     }\n//   }\n//   if (action.type === 'toggle') {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     }\n//   }\n//   return state;\n// };\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/yuliaivanova/Downloads/redux-project/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","initialAuthState","isAuth","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","login","logout","store","reducer","counterActions","actions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,OAAO,EAAE,CADiB;AAE1BC,EAAAA,WAAW,EAAE;AAFa,CAA5B;AAKA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,MAAM,EAAE;AADe,CAAzB,C,CAIA;;AAEA,MAAMC,YAAY,GAAGP,WAAW,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEP,mBAFiB;AAG/BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACT,OAAN;AACD,KAHO;;AAIRU,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACT,OAAN;AACD,KANO;;AAORW,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACT,OAAN,GAAgBS,KAAK,CAACT,OAAN,GAAgBY,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACR,WAAN,GAAoB,CAACQ,KAAK,CAACR,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBAJ,WAAW,CAAC;AACVQ,EAAAA,IAAI,EAAE,MADI;AAEVC,EAAAA,YAAY,EAAEJ,gBAFJ;AAGVK,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,KAAK,CAACN,KAAD,EAAQ;AACXA,MAAAA,KAAK,CAACN,MAAN,GAAe,IAAf;AACD,KAHO;;AAIRa,IAAAA,MAAM,GAAG,CAAE;;AAJH;AAHA,CAAD,CAAX,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,MAAMC,KAAK,GAAGnB,cAAc,CAAC;AAC3BoB,EAAAA,OAAO,EAAEd,YAAY,CAACc;AADK,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGf,YAAY,CAACgB,OAApC;AACP,eAAeH,KAAf","sourcesContent":["// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialCounterState = { \n  counter: 0,\n  showCounter: true\n};\n\nconst initialAuthState = {\n  isAuth: false\n};\n\n// using redux toolkit \n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\ncreateSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n    logout() {}\n  }\n})\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     }\n//   }\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     }\n//   }\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     }\n//   }\n//   if (action.type === 'toggle') {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     }\n//   }\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\n\nexport const counterActions = counterSlice.actions;\nexport default store;"]},"metadata":{},"sourceType":"module"}