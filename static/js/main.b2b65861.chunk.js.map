{"version":3,"sources":["components/Header.module.css","components/UserProfile.module.css","store/index.js","components/Counter.js","components/Header.js","components/Auth.js","components/UserProfile.js","App.js","index.js","components/Counter.module.css","components/Auth.module.css"],"names":["module","exports","counterSlice","createSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","payload","toggleCounter","authSlice","isAuth","login","logout","store","configureStore","reducer","auth","counterActions","actions","authActions","Counter","dispatch","useDispatch","show","useSelector","className","classes","value","buttons","onClick","Header","header","href","e","preventDefault","Auth","onSubmit","control","htmlFor","type","id","UserProfile","profile","App","ReactDOM","render","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,+B,6HCatBC,EAAeC,YAAY,CAC/BC,KAAM,UACNC,aAb0B,CAC1BC,QAAS,EACTC,aAAa,GAYbC,SAAU,CACRC,UADQ,SACEC,GACRA,EAAMJ,WAERK,UAJQ,SAIED,GACRA,EAAMJ,WAERM,SAPQ,SAOCF,EAAOG,GACdH,EAAMJ,QAAUI,EAAMJ,QAAUO,EAAOC,SAEzCC,cAVQ,SAUML,GACZA,EAAMH,aAAeG,EAAMH,gBAO3BS,EAAYb,YAAY,CAC5BC,KAAM,OACNC,aA7BuB,CACvBY,QAAQ,GA6BRT,SAAU,CACRU,MADQ,SACFR,GACJA,EAAMO,QAAS,GAEjBE,OAJQ,SAIDT,GACLA,EAAMO,QAAS,MAoCfG,EAAQC,YAAe,CAC3BC,QAAS,CACPhB,QAASJ,EAAaoB,QACtBC,KAAMP,EAAUM,WAIPE,EAAiBtB,EAAauB,QAC9BC,EAAcV,EAAUS,QACtBL,I,OCzBAO,EA1DC,WAEd,IAAMC,EAAWC,cAEXC,EAAOC,aAAY,SAAArB,GACvB,OAAOA,EAAMJ,QAAQC,eAGjBD,EAAUyB,aAAY,SAAArB,GAC1B,OAAOA,EAAMJ,QAAQA,WAmCvB,OACE,uBAAM0B,UAAWC,IAAQ3B,QAAzB,UACE,+CACCwB,GAAQ,qBAAKE,UAAWC,IAAQC,MAAxB,SAAgC5B,IACzC,sBAAK0B,UAAWC,IAAQE,QAAxB,UACE,wBAAQC,QAjCW,WACvBR,EAASJ,EAAef,cAgCpB,uBACA,wBAAQ2B,QA1BW,WACvBR,EAASJ,EAAeb,cAyBpB,uBACA,wBAAQyB,QAnBU,WACtBR,EAASJ,EAAeZ,SAAS,KAkB7B,2BACA,wBAAQwB,QAZe,WAC3BR,EAASJ,EAAeT,kBAWpB,mC,iBCjBOsB,EAnCA,WAEb,IAAMpB,EAASc,aAAY,SAAArB,GACzB,OAAOA,EAAMa,KAAKN,UAGdW,EAAWC,cAOjB,OACE,yBAAQG,UAAWC,IAAQK,OAA3B,UACE,wDACCrB,GACC,8BACE,+BACE,6BACE,mBAAGsB,KAAK,IAAR,yBAEF,6BACE,mBAAGA,KAAK,IAAR,gCAEF,6BACE,wBAAQH,QAlBE,SAACI,GACrBA,EAAEC,iBACFb,EAASF,EAAYP,WAgBX,+B,gBCECuB,EA5BF,WAEX,IAAMd,EAAWC,cAOjB,OACE,sBAAMG,UAAWC,IAAQV,KAAzB,SACE,kCACE,uBAAMoB,SARS,SAACH,GACpBA,EAAEC,iBACFb,EAASF,EAAYR,UAMjB,UACE,sBAAKc,UAAWC,IAAQW,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,QAAQC,GAAG,aAEzB,sBAAKf,UAAWC,IAAQW,QAAxB,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWC,GAAG,gBAE5B,mD,iBChBKC,EARK,WAClB,OACE,sBAAMhB,UAAWC,IAAQgB,QAAzB,SACE,iDCqBSC,MAhBf,WAEE,IAAMjC,EAAUc,aAAY,SAAArB,GAC1B,OAAOA,EAAMa,KAAKN,UAGpB,OACE,eAAC,WAAD,WACE,cAAC,EAAD,KACEA,GAAU,cAAC,EAAD,IACXA,GAAU,cAAC,EAAD,IACX,cAAC,EAAD,QCbNkC,IAASC,OACP,cAAC,IAAD,CAAUhC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFiC,SAASC,eAAe,U,kBCX1BtD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,QAAU,2B,kBCA9FD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,yB","file":"static/js/main.b2b65861.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1BiAu\"};","// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialCounterState = { \n  counter: 0,\n  showCounter: true\n};\n\nconst initialAuthState = {\n  isAuth: false\n};\n\n// using redux toolkit Counter Slice\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// Auth Slice\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n    logout(state) {\n      state.isAuth = false;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     }\n//   }\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     }\n//   }\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     }\n//   }\n//   if (action.type === 'toggle') {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     }\n//   }\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","import classes from './Counter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { counterActions } from '../store/index';\n\nconst Counter = () => {\n\n  const dispatch = useDispatch();\n\n  const show = useSelector(state => {\n    return state.counter.showCounter\n  });\n\n  const counter = useSelector(state => {\n    return state.counter.counter\n  });\n\n  // const incrementHandler = () => {\n  //   dispatch({ type: 'increment' });\n  // };\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  // const decrementHandler = () => {\n  //   dispatch({ type: 'decrement' });\n  // };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  // const increaseHandler = () => {\n  //   dispatch({ type: 'increase', amount: 5 });\n  // };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5));\n  };\n\n  // const toggleCounterHandler = () => {\n  //   dispatch({ type: 'toggle' });\n  // };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div className={classes.buttons}>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={decrementHandler}>Decrement</button>\n        <button onClick={increaseHandler}>Increase by 5</button>\n        <button onClick={toggleCounterHandler}>Toggle Counter</button>\n      </div>\n    </main>\n  );\n};\n\nexport default Counter;\n","import classes from './Header.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { authActions } from '../store/index';\n\nconst Header = () => {\n\n  const isAuth = useSelector(state => {\n    return state.auth.isAuth\n  });\n\n  const dispatch = useDispatch();\n\n  const logoutHandler = (e) => {\n    e.preventDefault();\n    dispatch(authActions.logout());\n  }\n\n  return (\n    <header className={classes.header}>\n      <h1>Redux Auth and Counter</h1>\n      {isAuth && (\n        <nav>\n          <ul>\n            <li>\n              <a href='/'>My Orders</a>\n            </li>\n            <li>\n              <a href='/'>Account settings</a>\n            </li>\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import classes from './Auth.module.css';\nimport { useDispatch } from 'react-redux';\n\nimport { authActions } from '../store/index';\n\nconst Auth = () => {\n\n  const dispatch = useDispatch();\n\n  const loginHandler = (e) => {\n    e.preventDefault();\n    dispatch(authActions.login());\n  }\n\n  return (\n    <main className={classes.auth}>\n      <section>\n        <form onSubmit={loginHandler}>\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' />\n          </div>\n          <button>Login</button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default Auth;\n","import classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <main className={classes.profile}>\n      <h2>User Profile</h2>\n    </main>\n  );\n};\n\nexport default UserProfile;\n","import { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\n\n\nimport Counter from './components/Counter';\nimport Header from './components/Header';\nimport Auth from './components/Auth';\nimport UserProfile from './components/UserProfile';\n\n\nfunction App() {\n\n  const isAuth  = useSelector(state => {\n    return state.auth.isAuth\n  })\n\n  return (\n    <Fragment>\n      <Header />\n      {!isAuth && <Auth />}\n      {isAuth && <UserProfile />}\n      <Counter />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__1U4hj\",\"value\":\"Counter_value__2JpT-\",\"buttons\":\"Counter_buttons__3lvtJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__3QLaR\",\"control\":\"Auth_control__3bkp4\"};"],"sourceRoot":""}